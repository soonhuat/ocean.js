import t from"bignumber.js";import e from"crypto-js/sha256";import a from"web3";import i from"cross-fetch";import n from"decimal.js";import o from"@oceanprotocol/contracts/artifacts/contracts/pools/dispenser/Dispenser.sol/Dispenser.json";import r from"@oceanprotocol/contracts/artifacts/contracts/pools/fixedRate/FixedRateExchange.sol/FixedRateExchange.json";import s from"@oceanprotocol/contracts/artifacts/contracts/pools/FactoryRouter.sol/FactoryRouter.json";import c from"@oceanprotocol/contracts/artifacts/contracts/templates/ERC20Template.sol/ERC20Template.json";import l from"@oceanprotocol/contracts/artifacts/contracts/templates/ERC20TemplateEnterprise.sol/ERC20TemplateEnterprise.json";import d from"@oceanprotocol/contracts/artifacts/contracts/templates/ERC721Template.sol/ERC721Template.json";import h from"@oceanprotocol/contracts/artifacts/contracts/ERC721Factory.sol/ERC721Factory.json";import u from"@oceanprotocol/contracts/artifacts/contracts/ve/veOCEAN.vy/veOCEAN.json";import m from"@oceanprotocol/contracts/artifacts/contracts/ve/veFeeDistributor.vy/veFeeDistributor.json";import w from"@oceanprotocol/contracts/artifacts/contracts/ve/veFeeEstimate.vy/veFeeEstimate.json";import p from"@oceanprotocol/contracts/artifacts/contracts/ve/veAllocate.sol/veAllocate.json";import g from"@oceanprotocol/contracts/artifacts/contracts/df/DFRewards.sol/DFRewards.json";import f from"@oceanprotocol/contracts/artifacts/contracts/df/DFStrategyV1.sol/DFStrategyV1.json";class b{constructor(){this.nodeUri=void 0,this.providerAddress=void 0,this.metadataCacheUri=void 0,this.providerUri=void 0,this.web3Provider=void 0,this.oceanTokenAddress=void 0,this.nftFactoryAddress=void 0,this.datatokensABI=void 0,this.fixedRateExchangeAddress=void 0,this.fixedRateExchangeAddressABI=void 0,this.dispenserAddress=void 0,this.dispenserABI=void 0,this.opfCommunityFeeCollector=void 0,this.sideStakingAddress=void 0,this.startBlock=void 0,this.verbose=void 0,this.authMessage=void 0,this.authTokenExpiration=void 0,this.parityUri=void 0,this.threshold=void 0,this.chainId=void 0,this.network=void 0,this.subgraphUri=void 0,this.explorerUri=void 0,this.oceanTokenSymbol=void 0,this.transactionBlockTimeout=void 0,this.transactionConfirmationBlocks=void 0,this.transactionPollingTimeout=void 0,this.gasFeeMultiplier=void 0,this.veAllocate=void 0,this.veOCEAN=void 0,this.veDelegation=void 0,this.veFeeDistributor=void 0,this.veDelegationProxy=void 0,this.DFRewards=void 0,this.DFStrategyV1=void 0,this.veFeeEstimate=void 0}}function E(){return E=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var i in a)Object.prototype.hasOwnProperty.call(a,i)&&(t[i]=a[i])}return t},E.apply(this,arguments)}const C="0x0000000000000000000000000000000000000000",F=1e6,y="115792089237316195423570985008687907853269984665640564039457584007913129639934",v="Returned error: Method eth_feeHistory not supported.";function D(t,e){return e&&(e.transactionBlockTimeout&&(t.transactionBlockTimeout=e.transactionBlockTimeout),e.transactionConfirmationBlocks&&(t.transactionConfirmationBlocks=e.transactionConfirmationBlocks),e.transactionPollingTimeout&&(t.transactionPollingTimeout=e.transactionPollingTimeout)),t}async function A(e,a){const i=new t(await e.eth.getGasPrice());return a?i.multipliedBy(a).integerValue(t.ROUND_DOWN).toString(10):i.toString(10)}async function x(e,a,i,n){const o=new e.eth.Contract(L,a);let r=n||await o.methods.decimals().call();"0"===r&&(r=18);const s=new t(i).div(new t(10).exponentiatedBy(r));return t.config({EXPONENTIAL_AT:50}),s.toString()}async function T(e,a,i,n){const o=new e.eth.Contract(L,a);let r=n||await o.methods.decimals().call();return"0"===r&&(r=18),t.config({EXPONENTIAL_AT:50}),new t(i).times(new t(10).exponentiatedBy(r)).toFixed(0)}async function B(t,e,...a){return await e.apply(null,a).estimateGas({from:t},(t,e)=>t?1e6:e)}async function k(e,a,i,n,o,...r){const s={from:e,gas:a+1},c=await i.eth.getChainId();try{var l,d,h;const e=await i.eth.getFeeHistory(1,"latest",[75]);if(e&&null!=e&&null!=(l=e.baseFeePerGas)&&l[0]&&null!=e&&null!=(d=e.reward)&&null!=(h=d[0])&&h[0]){var u,m,w;let a=new t(null==e||null==(u=e.reward)||null==(m=u[0])?void 0:m[0]);n>1&&(a=a.multipliedBy(n)),s.maxPriorityFeePerGas=a.integerValue(t.ROUND_DOWN).toString(10),s.maxFeePerGas=a.plus(new t(null==e||null==(w=e.baseFeePerGas)?void 0:w[0]).multipliedBy(2)).integerValue(t.ROUND_DOWN).toString(10),s.maxPriorityFeePerGas=80001!==c&&137!==c||!new t(s.maxPriorityFeePerGas).lte(new t(3e10))?s.maxPriorityFeePerGas:new t(3e10).integerValue(t.ROUND_DOWN).toString(10),s.maxFeePerGas=80001!==c&&137!==c||!new t(s.maxFeePerGas).lte(new t(3e10))?s.maxFeePerGas:new t(3e10).integerValue(t.ROUND_DOWN).toString(10)}else s.gasPrice=await A(i,n)}catch(t){"Returned error: Method eth_feeHistory not supported."===(null==t?void 0:t.message)&&W.log("Not able to use EIP 1559, getFeeHistory method not suported by network."),s.gasPrice=await A(i,n)}return await o.apply(null,r).send(s)}var R,M={nouns:["Crab","Fish","Seal","Octopus","Shark","Seahorse","Walrus","Starfish","Whale","Orca","Penguin","Jellyfish","Squid","Lobster","Pelican","Shrimp","Oyster","Clam","Seagull","Dolphin","Shell","Cormorant","Otter","Anemone","Turtle","Coral","Ray","Barracuda","Krill","Anchovy","Angelfish","Barnacle","Clownfish","Cod","Cuttlefish","Eel","Fugu","Herring","Haddock","Ling","Mackerel","Manatee","Narwhal","Nautilus","Plankton","Porpoise","Prawn","Pufferfish","Swordfish","Tuna"],adjectives:["adamant","adroit","amatory","ambitious","amused","animistic","antic","arcadian","artistic","astonishing","astounding","baleful","bellicose","bilious","blissful","boorish","brave","breathtaking","brilliant","calamitous","caustic","cerulean","clever","charming","comely","competent","concomitant","confident","contumacious","corpulent","crapulous","creative","dazzling","dedicated","defamatory","delighted","delightful","determined","didactic","dilatory","dowdy","efficacious","effulgent","egregious","empowered","endemic","enthusiastic","equanimous","exceptional","execrable","fabulous","fantastic","fastidious","feckless","fecund","friable","fulsome","garrulous","generous","gentle","guileless","gustatory","heuristic","histrionic","hubristic","incendiary","incredible","insidious","insolent","inspired","intransigent","inveterate","invidious","invigorated","irksome","jejune","juicy","jocular","joyful","judicious","kind","lachrymose","limpid","loquacious","lovely","luminous","mannered","marvelous","mendacious","meretricious","minatory","mordant","motivated","munificent","nefarious","noxious","obtuse","optimistic","parsimonious","pendulous","pernicious","pervasive","petulant","passionate","phenomenal","platitudinous","pleasant","powerful","precipitate","propitious","puckish","querulous","quiescent","rebarbative","recalcitant","redolent","rhadamanthine","risible","ruminative","sagacious","salubrious","sartorial","sclerotic","serpentine","smart","spasmodic","strident","stunning","stupendous","taciturn","tactful","tasty","tenacious","tremendous","tremulous","trenchant","turbulent","turgid","ubiquitous","uxorious","verdant","vibrant","voluble","voracious","wheedling","withering","wonderful","zealous"]};function P(t){const e=t||M,a=Math.floor(Math.random()*e.adjectives.length),i=Math.floor(Math.random()*e.nouns.length),n=Math.floor(100*Math.random()),o=e.adjectives[a].replace(/^\w/,t=>t.toUpperCase()),r=e.nouns[i].replace(/^\w/,t=>t.toUpperCase());return{name:`${o} ${r} Token`,symbol:`${(o.substring(0,3)+r.substring(0,3)).toUpperCase()}-${n}`}}function O(t,i){return t=a.utils.toChecksumAddress(t),`did:op:${e(t+i.toString(10)).toString()}`}function U(t){return e(t).toString()}async function S(t){const e=(await i(t,{method:"HEAD"})).headers.get("content-disposition"),a=null!=e&&e.split("=")[1]?null==e?void 0:e.split("=")[1]:"file",n=new XMLHttpRequest;n.responseType="blob",n.open("GET",t),n.onload=()=>{const t=window.URL.createObjectURL(n.response),e=document.createElement("a");e.href=t,e.setAttribute("download",a),document.body.appendChild(e),e.click(),e.remove(),window.URL.revokeObjectURL(t)},n.send(null)}async function N(t,e){const a=await i(t);if(!a.ok)throw new Error("Response error.");let n;try{n=a.headers.get("content-disposition").match(/attachment;filename=(.+)/)[1]}catch(a){try{n=t.split("/").pop()}catch(t){n=`file${e}`}}return{data:await a.arrayBuffer(),filename:n}}async function I(t){return new Promise(e=>{setTimeout(e,t)})}!function(t){t[t.None=-1]="None",t[t.Error=0]="Error",t[t.Warn=1]="Warn",t[t.Log=2]="Log",t[t.Verbose=3]="Verbose"}(R||(R={}));class j{constructor(t=R.Error){this.logLevel=void 0,this.logLevel=t}setLevel(t){this.logLevel=t}bypass(...t){this.dispatch("log",-Infinity,...t)}debug(...t){this.dispatch("debug",R.Verbose,...t)}log(...t){this.dispatch("log",R.Log,...t)}warn(...t){this.dispatch("warn",R.Warn,...t)}error(...t){this.dispatch("error",R.Error,...t)}dispatch(t,e,...a){this.logLevel>=e&&console[t](...a)}}const W=new j,L=[{constant:!0,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{payable:!0,stateMutability:"payable",type:"fallback"},{anonymous:!1,inputs:[{indexed:!0,name:"owner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Transfer",type:"event"}];async function q(t,e,a){let i=await t.eth.sign(e,a);i=i.substr(2);const n="0x"+i.slice(0,64),o="0x"+i.slice(64,128);let r="0x"+i.slice(128,130);return"0x00"===r&&(r="0x1b"),"0x01"===r&&(r="0x1c"),{v:r,r:n,s:o}}async function $(t,e,a,i,o,r,s=!1,c,l){const d=new t.eth.Contract(L,i);if(!s){const e=await V(t,i,a,o);if(new n(e).greaterThanOrEqualTo(new n(r)))return new n(e).toNumber()}const h=await T(t,i,r,c),u=await B(a,d.methods.approve,o,h);return l?u:await k(a,u+1,t,null==e?void 0:e.gasFeeMultiplier,d.methods.approve,o,h)}async function _(e,a,i,o,r,s,c=!1,l){const d=new e.eth.Contract(L,o);if(!c){const a=await Z(e,o,i,r);if(new t(a).gt(new t(s)))return new n(a).toNumber()}let h=null;const u=await B(i,d.methods.approve,r,s);if(l)return u;try{h=await k(i,u+1,e,null==a?void 0:a.gasFeeMultiplier,d.methods.approve,r,s)}catch(t){W.error(`ERROR: Failed to approve spender to spend tokens : ${t.message}`)}return h}async function G(t,e,a,i,n,o,r){const s=new t.eth.Contract(L,i),c=await T(t,i,o),l=await B(a,s.methods.transfer,n,c);return r?l:await k(a,l+1,t,null==e?void 0:e.gasFeeMultiplier,s.methods.transfer,n,c)}async function V(t,e,a,i,n){const o=new t.eth.Contract(L,e),r=await o.methods.allowance(a,i).call();return await x(t,e,r,n)}async function H(t,e,a,i){const n=new t.eth.Contract(L,e),o=await n.methods.balanceOf(a).call();return await x(t,e,o,i)}async function Z(t,e,a,i){const n=new t.eth.Contract(L,e);return await n.methods.allowance(a,i).call()}async function z(t,e){const a=new t.eth.Contract(L,e);return await a.methods.decimals().call()}var J={rinkeby:{chainId:4,Ocean:"0x8967bcf84170c91b0d24d4302c2376283b0b3a07",OPFCommunityFeeCollector:"0x39b50501c22578D084191d7E91cfDd1068A4e163",startBlock:10693767,poolTemplate:"0x41016a5a0a21B24C5c8C3ae119902a5bF5999bE2",Router:"0x4d3232171465C9F19b937b5ffBd25876345C8EfE",FixedPrice:"0x65Ee19cd86dE140fE08Bfd5d51e62Fe53e96358f",Staking:"0x651e859510A219f6CAd57E23926CdE6B9eaee822",ERC20Template:{1:"0xA0EAB6A2D6880AB37906EA5446D9085426f076E9",2:"0xF7266F51c0Cb9352aB639E9ce001a9b03316d1fE"},ERC721Template:{1:"0x2A1D7746BecA3910e2FaCfd26060B9960B4CD9ED"},Dispenser:"0xCdbdDFeac752EC993e14bF07424D324B6B6959F2",ERC721Factory:"0x465069D3d6Ec45CDB006ec3E22cC9E8d6f9793eF",veAllocate:"0xbB7E22Ed79563daDb33BeDc16080DF02B62a1CE4",veOCEAN:"0x57cD87bb197B74Df44Fd69177c0550B9a0C04619",veDelegation:"0x15A278BaabC9EE66737562E35B3a42F77a48Fa79",veFeeDistributor:"0xB99BAA8D5b131c9140Be2F13EA6D2494DF272919",veDelegationProxy:"0x7b886fa12a9b11BD0cb83e79398070CD635BcBdF",DFRewards:"0xD09BCDC099D635A0D8A7f003DC01F645382B6700",DFStrategyV1:"0x2Fe41338f11d7402E31A4b902F60077164C65a52",veFeeEstimate:"0xE98Cf50B7793C120446433Ee551C39Fcc47fDe47"},mumbai:{chainId:80001,Ocean:"0xd8992Ed72C445c35Cb4A2be468568Ed1079357c8",OPFCommunityFeeCollector:"0xd8839c98ca8CE07dDa4e460a71B634A4A82f8BD6",startBlock:26354458,poolTemplate:"0x101fd973F488c40DC57305CFED84bB2a2C8A7D6E",Router:"0x564955E9d25B49afE5Abd66966Ab4Bc9Ad55Fedb",FixedPrice:"0x25e1926E3d57eC0651e89C654AB0FA182C6D5CF7",Staking:"0xdFa50781f1E58419f56A00A8Bb5Fce1a9dE67269",ERC20Template:{1:"0xd31f74d1D5a83b896Ad746d96f78fd65B0a66EBf",2:"0x80c5DcCc76a54b3c43494Ca3c857426aA4ce0a52"},ERC721Template:{1:"0xda01B7dD00ef97Eb477B69D943779b7df5ed0Aec"},Dispenser:"0x21bc18b92F7551e715B490E2C2875E8532317F8d",ERC721Factory:"0x7d46d74023507D30ccc2d3868129fbE4e400e40B",veAllocate:"0x3fa1d5AC45ab1Ff9CFAe227c5583Ec0484b54Ef9",veOCEAN:"0x061955B6980A34fce74b235f90DBe20d76f087b1",veDelegation:"0x96E3aE4247a01C3d40a261df1F8ead70E32E7C0c",veFeeDistributor:"0x35F1e6765750E874EB9d0675393A1A394A4749b4",veDelegationProxy:"0x51B1b14b8bfb43a2fB0b49843787Ca440200F6b7",DFRewards:"0x4259c164eedA7483dda2b4b622D761A88674D31f",DFStrategyV1:"0x1be9C72500B41c286C797D4FE727747Ae9C4E195",veFeeEstimate:"0xCFeF55c6ae4d250586e293f29832967a04A9087d"},ropsten:{chainId:3,Ocean:"0x5e8DCB2AfA23844bcc311B00Ad1A0C30025aADE9",OPFCommunityFeeCollector:"0x0bA762E1b4F5772AfBb7c9A734bE0C9164ab2a30",startBlock:12274186,poolTemplate:"0x6B9FeB968947C92e35BE4c16152b7694E906FB06",Router:"0x41aC3dC16cb9603d5E9379dcDc5fAaa13c114ceE",FixedPrice:"0x1909A3cBfE0766e7bce8cC0d4927bcFDC6591cd2",Staking:"0x56b922b71D281Ef0638C6e28015f8f7A1c195B76",ERC20Template:{1:"0x4F20213DB5c9dE28E51f1f557663A38fce790b3d",2:"0xe8AC04c7c6c3bD68a06D3C58F483696fE23D9dB8"},ERC721Template:{1:"0x101fd973F488c40DC57305CFED84bB2a2C8A7D6E"},Dispenser:"0x660B3832e940E4bb4FfbDAA0aAB9E9B8D524C7Ef",ERC721Factory:"0xB0F8c68eF94ACB8E976b1dED6351Cc62e383d253"},moonbase:{chainId:1287,Ocean:"0xF6410bf5d773C7a41ebFf972f38e7463FA242477",OPFCommunityFeeCollector:"0xeD8CA02627867f459593DD35bC2B0C465B9E9518",startBlock:2169229,poolTemplate:"0x3385Ff92e9A9fbE3A36672a3857c90351d2E56a9",Router:"0x08bEEfA4AD10C5Fcf5132326bebF1AA7181aC301",FixedPrice:"0x7c7d24E786887257a7EcAdBa03063E10B4Ff3655",Staking:"0x5FFE6649C7562F3bee1ca114c7c3316BF4B45b50",ERC20Template:{1:"0xa15024b732A8f2146423D14209eFd074e61964F3",2:"0x5ee92aD0760e380501780e2c11c16451F4d3E81C"},ERC721Template:{1:"0x6468f7ffD373bE2A2371757554684766bf0F51e8"},Dispenser:"0x04706CA5d439b342449f0F483b0da0E7B70CC1ef",ERC721Factory:"0x5b1E1b333B76BC81FA60cD986EA82487e4F72B8B"},polygon:{chainId:137,Ocean:"0x282d8efCe846A88B159800bd4130ad77443Fa1A1",OPFCommunityFeeCollector:"0x042BFbd88c3998282153088604207b2AeF045b43",startBlock:28443969,poolTemplate:"0xBB3051dF2D3E408DAE6E6dAa2296BC6215F0dCFd",Router:"0x78e1317186786591912A10a7aF2490B8B4697A93",FixedPrice:"0xb28Ab1AaDe4c75F8cF013136fc0c290AeaeA9BA6",Staking:"0x3EFDD8f728c8e774aB81D14d0B2F07a8238960f4",ERC20Template:{1:"0x8B8E187CF9c551e63f54AA04E21F48CDAF2296aE",2:"0xE282492d50879b911844fA6dD87aAD6169963fC6"},ERC721Template:{1:"0xd09789Ce05aa0f6feFc18315de4964Db07Cc0618"},Dispenser:"0x257fe2e49530A4B7FC3Ed597465e2931db3f20b7",ERC721Factory:"0x6fd867E5AEE6D62a24f97939db90C4e67A73A651",DFRewards:"0x0cea7DA063EA910D6904299b5A29A8b68DBC1947",DFStrategyV1:"0x0000000000cEAe464ae8a73EDDc0B482383490e7"},bsc:{chainId:56,Ocean:"0xDCe07662CA8EbC241316a15B611c89711414Dd1a",OPFCommunityFeeCollector:"0x973e69303259B0c2543a38665122b773D28405fB",startBlock:18407552,poolTemplate:"0x3E85e7Cb15880b6d4871092E74bF65CE03E8448D",Router:"0x4344D4Bc29531DB736378e9A3dA85BF1eff0CB22",FixedPrice:"0x8bA04715B1b210f710426b21A29887EEd4EA6751",Staking:"0x1706DF1f2d93558D1d77bEd49ccdB8B88fAfC306",ERC20Template:{1:"0x45dA5988d4fEAEdc5Ee60FC83eA7Caa8Fb485883",2:"0xA8513c0457AfaD54a57664Ba5C742c24f1D624be"},ERC721Template:{1:"0xDB55DCBbAC940aCb5c28817802f17A48B15d558b"},Dispenser:"0x042BFbd88c3998282153088604207b2AeF045b43",ERC721Factory:"0xbFBc7A21133B4e0e54a182BE8d4337A5e036A615",DFRewards:"0x0cea7DA063EA910D6904299b5A29A8b68DBC1947",DFStrategyV1:"0x0000000000cEAe464ae8a73EDDc0B482383490e7"},energyweb:{chainId:246,Ocean:"0x593122AAE80A6Fc3183b2AC0c4ab3336dEbeE528",OPFCommunityFeeCollector:"0x3c21a90599b5B7f37014cA5Bf30d3f1b73d7e391",startBlock:18264850,poolTemplate:"0xCfDdA22C9837aE76E0faA845354f33C62E03653a",Router:"0x4E6058dC00e90C0DCA47A5d0D3346F409939A5ab",FixedPrice:"0xE9397625Df9B63f0C152f975234b7988b54710B8",Staking:"0x159924ca0F47D6F704B97E29099b89e518A17B5E",ERC20Template:{1:"0xc313e19146Fc9a04470689C9d41a4D3054693531",2:"0x98679D582AB3398C03D3308dEB9c7AeC50B52ded"},ERC721Template:{1:"0x1d535147a97bd87c8443125376E6671B60556E07"},Dispenser:"0x042D709b72B437d7d387F2679bD4ac060e561c9f",ERC721Factory:"0x4dD281EB67DED07E76E413Df16176D66ae69e240",DFRewards:"0x0cea7DA063EA910D6904299b5A29A8b68DBC1947",DFStrategyV1:"0x0000000000cEAe464ae8a73EDDc0B482383490e7"},moonriver:{chainId:1285,Ocean:"0x99C409E5f62E4bd2AC142f17caFb6810B8F0BAAE",OPFCommunityFeeCollector:"0x12bB8D85a091A69A07E22E52d4567dBB91568f52",startBlock:1960563,poolTemplate:"0x9497d1d64F2aFeBcd4f9916Eef3d9094E5Df962f",Router:"0x7b0576CF01E868bce46cca91b2a8E674141b0355",FixedPrice:"0x8389bC1306208488D665F939AFB4079adf6f5a06",Staking:"0xc97fa83746aDe91b0eeB16cb51326a0A980Af7c3",ERC20Template:{1:"0xE5aa2C9B551aFcA4C0A98BB3B37D7A43084d0a66",2:"0xf0c7A31D7Ee26bEBfb4BAD8e37490bEadE3F846f"},ERC721Template:{1:"0xA0329eFFa1370eAb1DC5998Db4292ae0F535a282"},Dispenser:"0x0Ee8b03Dafc868a0899ebE1c12d734D53A957250",ERC721Factory:"0x86F2BB9F8f18B5a836b342199a3eC89F282E4018",DFRewards:"0x0cea7DA063EA910D6904299b5A29A8b68DBC1947",DFStrategyV1:"0x0000000000cEAe464ae8a73EDDc0B482383490e7"},mainnet:{chainId:1,Ocean:"0x967da4048cD07aB37855c090aAF366e4ce1b9F48",OPFCommunityFeeCollector:"0x49E35cd2bAE043Abd9074B6e5a649a5AdEB05C33",startBlock:14907021,poolTemplate:"0x8daC419D5D81Af8c8E795D0D73f64d5220e28cd8",Router:"0x8149276f275EEFAc110D74AFE8AFECEaeC7d1593",FixedPrice:"0xfa48673a7C36A2A768f89AC1ee8C355D5c367B02",Staking:"0x7842Fa3B2d87Ff1cd52C4152382f7C4B3406E5A6",ERC20Template:{1:"0x973e69303259B0c2543a38665122b773D28405fB",2:"0x3E85e7Cb15880b6d4871092E74bF65CE03E8448D"},ERC721Template:{1:"0x4344D4Bc29531DB736378e9A3dA85BF1eff0CB22"},Dispenser:"0x8bA04715B1b210f710426b21A29887EEd4EA6751",ERC721Factory:"0x1706DF1f2d93558D1d77bEd49ccdB8B88fAfC306",DFRewards:"0xFe27534EA0c016634b2DaA97Ae3eF43fEe71EEB0",DFStrategyV1:"0x545138e8D76C304C916B1261B3f6c446fe4f63e3",veOCEAN:"0xE86Bf3B0D3a20444DE7c78932ACe6e5EfFE92379",veAllocate:"0x55567E038b0a50283084ae773FA433a5029822d3",veDelegation:"0xc768eDF2d21fe00ef5804A7Caa775E877e65A70E",veFeeDistributor:"0x256c54219816603BB8327F9019533B020a76e936",veDelegationProxy:"0x45E3BEc7D139Cd8Ed7FeB161F3B094688ddB0c20",veFeeEstimate:"0x4aA261bC595abC6fDEf0255C83e2a9305261753f",SmartWalletChecker:"0xd7ddf62257A41cc6cdAd7A3d36e4f1d925fD142a"},goerli:{chainId:5,Ocean:"0xCfDdA22C9837aE76E0faA845354f33C62E03653a",OPFCommunityFeeCollector:"0xE9397625Df9B63f0C152f975234b7988b54710B8",startBlock:7425573,Router:"0x159924ca0F47D6F704B97E29099b89e518A17B5E",FixedPrice:"0xc313e19146Fc9a04470689C9d41a4D3054693531",Staking:"0x98679D582AB3398C03D3308dEB9c7AeC50B52ded",ERC20Template:{1:"0x1d535147a97bd87c8443125376E6671B60556E07",2:"0x042D709b72B437d7d387F2679bD4ac060e561c9f"},ERC721Template:{1:"0x4dD281EB67DED07E76E413Df16176D66ae69e240"},Dispenser:"0xFe7967A5176fDAFa8DE109b3507016B885a82D6e",ERC721Factory:"0xe8c6Dc39602031A152440311e364818ba25C2Bc1",veAllocate:"0x3EFDD8f728c8e774aB81D14d0B2F07a8238960f4",veOCEAN:"0x8B8E187CF9c551e63f54AA04E21F48CDAF2296aE",veDelegation:"0xE282492d50879b911844fA6dD87aAD6169963fC6",veFeeDistributor:"0xd09789Ce05aa0f6feFc18315de4964Db07Cc0618",veDelegationProxy:"0x257fe2e49530A4B7FC3Ed597465e2931db3f20b7",DFRewards:"0x6fd867E5AEE6D62a24f97939db90C4e67A73A651",DFStrategyV1:"0x1Af3CC30fD18af837f7630Aff12aE2b826bD3c5D",veFeeEstimate:"0xB3AB945aa7553EbC8Ce234a53b03a1bbA23E8fAB"},polygonedge:{chainId:81001,Ocean:"0x61C9e793F3d5247cc12dB82b9DB733fC9ffBA812",OPFCommunityFeeCollector:"0x8daC419D5D81Af8c8E795D0D73f64d5220e28cd8",startBlock:5180969,Router:"0x86b77E56d54820544A64ADAC127a2F7dfBA753A2",FixedPrice:"0x6d623B190357064234859586878D67440B719783",Staking:"0x6b0B482fC953A62CCB3f1Ed655fda61042de85c4",ERC20Template:{1:"0x5802bBA5FE643f35061dfca0238Ca124D0Bb185C",2:"0xe1a6C1A49cfC60A87670AdB4Ab898402fE27C664"},ERC721Template:{1:"0xE269aD9585B9B652969508949878688c3328dc17"},Dispenser:"0x6F21fa8f723143ED9EDD102010Ed602Ac0383d83",ERC721Factory:"0x881b0E849745A65e2E082B629b5C7EDa500768fb"},gaiaxtestnet:{chainId:2021e3,Ocean:"0x80E63f73cAc60c1662f27D2DFd2EA834acddBaa8",OPFCommunityFeeCollector:"0xD3173c3E3d9ea662E914C30Bcd647eF573AcE405",startBlock:7711332,Router:"0x23A8b2D7176485a6349e4830605F323f31019333",FixedPrice:"0xb65F19225fEBb650Fcc211dC9F18FEC6f4a328D5",Staking:"0xcD8674D32E940B14ABF2Cc8C32B21952cB354101",ERC20Template:{1:"0x43eC0a34E1b70C7f8E579ab866F37642777727E7",2:"0x6976320eC365202118B4B0B0906E13DDf21633A5"},ERC721Template:{1:"0x5494711392a67DA50D3bC7b1fcC2d1877cFaA4d2"},Dispenser:"0x8c98ea273bA22327F896Aa1a1a46E1BFf56e9b1D",ERC721Factory:"0x49E35cd2bAE043Abd9074B6e5a649a5AdEB05C33"},alfajores:{chainId:44787,Ocean:"0xd8992Ed72C445c35Cb4A2be468568Ed1079357c8",OPFCommunityFeeCollector:"0xEF62FB495266C72a5212A11Dce8baa79Ec0ABeB1",startBlock:16422659,Router:"0xc37F8341Ac6e4a94538302bCd4d49Cf0852D30C0",FixedPrice:"0x3c21a90599b5B7f37014cA5Bf30d3f1b73d7e391",Staking:"0xCfDdA22C9837aE76E0faA845354f33C62E03653a",ERC20Template:{1:"0x4E6058dC00e90C0DCA47A5d0D3346F409939A5ab",2:"0xE9397625Df9B63f0C152f975234b7988b54710B8"},ERC721Template:{1:"0x159924ca0F47D6F704B97E29099b89e518A17B5E"},Dispenser:"0xc313e19146Fc9a04470689C9d41a4D3054693531",ERC721Factory:"0x98679D582AB3398C03D3308dEB9c7AeC50B52ded"},"gen-x-testnet":{chainId:100,Ocean:"0x0995527d3473b3a98c471f1ed8787acd77fbf009",OceanToken:"0x0995527d3473b3a98c471f1ed8787acd77fbf009",OPFCommunityFeeCollector:"0x881b0E849745A65e2E082B629b5C7EDa500768fb",CommunityFeeCollector:"0x881b0E849745A65e2E082B629b5C7EDa500768fb",startBlock:6860326,Router:"0x7f3414Da079706b9675984D10F9FFa958456f1bc",FixedPrice:"0x03c2375A40cEAF427F7738693AD81C34F765f4f1",Staking:"0xf3a853de3D179b0Ed5BA6E71ABB3600EB614e020",ERC20Templates:{1:"0x6FC22510CD159724F6fD23c7C068866047cCAe3b",2:"0x5f8463174bCCEEBF60edd77303275F87CDEa6690"},ERC721Template:{"1:":"0xD6E0EF71AECedA1d3c6A4a3BcfFCb2EB6bfaF469"},Dispenser:"0x5cC523863d29a0a588747627c30D72E991489B66",ERC721Factory:"0xc6cf0aec4Dc43E2925F62681EEb66Aa5D24c1ce3"},filecointestnet:{chainId:3141,Ocean:"0xf26c6C93f9f1d725e149d95f8E7B2334a406aD10",OPFCommunityFeeCollector:"0xF6410bf5d773C7a41ebFf972f38e7463FA242477",startBlock:145290,Router:"0x1B083D8584dd3e6Ff37d04a6e7e82b5F622f3985",FixedPrice:"0x69B6E54Ad2b3c2801d11d8Ad56ea1d892555b776",Staking:"0x2112Eb973af1DBf83a4f11eda82f7a7527D7Fde5",ERC20Template:{1:"0x80E63f73cAc60c1662f27D2DFd2EA834acddBaa8",2:"0x3C5605202eD47C162450AE975415473e73F93072"},ERC721Template:{1:"0x30E4CC2C7A9c6aA2b2Ce93586E3Df24a3A00bcDD"},Dispenser:"0xDEfD0018969cd2d4E648209F876ADe184815f038",ERC721Factory:"0x9C9eE07b8Ce907D2f9244F8317C1Ed29A3193bAe"}};const X={chainId:null,network:"unknown",metadataCacheUri:"https://v4.aquarius.oceanprotocol.com",nodeUri:"http://127.0.0.1:8545",providerUri:"https://v4.provider.oceanprotocol.com",subgraphUri:null,explorerUri:null,oceanTokenAddress:null,oceanTokenSymbol:"OCEAN",fixedRateExchangeAddress:null,dispenserAddress:null,startBlock:0,transactionBlockTimeout:50,transactionConfirmationBlocks:1,transactionPollingTimeout:750,gasFeeMultiplier:1},Q=[E({},X),E({},X,{chainId:8996,network:"development",metadataCacheUri:"http://172.15.0.5:5000",providerUri:"http://172.15.0.4:8030",subgraphUri:"https://172.15.0.15:8000"}),E({},X,{chainId:5,network:"goerli",nodeUri:"https://goerli.infura.io/v3",subgraphUri:"https://v4.subgraph.goerli.oceanprotocol.com",explorerUri:"https://goerli.etherscan.io",gasFeeMultiplier:1.1}),E({},X,{chainId:1,network:"mainnet",nodeUri:"https://mainnet.infura.io/v3",subgraphUri:"https://v4.subgraph.mainnet.oceanprotocol.com",explorerUri:"https://etherscan.io",startBlock:11105459,transactionBlockTimeout:150,transactionConfirmationBlocks:5,transactionPollingTimeout:1750,gasFeeMultiplier:1.05}),E({},X,{chainId:137,network:"polygon",nodeUri:"https://polygon-mainnet.infura.io/v3",subgraphUri:"https://v4.subgraph.polygon.oceanprotocol.com",explorerUri:"https://polygonscan.com",oceanTokenSymbol:"mOCEAN",gasFeeMultiplier:1.6}),E({},X,{chainId:2021e3,network:"gaiaxtestnet",nodeUri:"https://rpc.gaiaxtestnet.oceanprotocol.com",providerUri:"https://v4.provider.gaiaxtestnet.oceanprotocol.com",subgraphUri:"https://v4.subgraph.gaiaxtestnet.oceanprotocol.com",explorerUri:"https://blockscout.gaiaxtestnet.oceanprotocol.com"}),E({},X,{chainId:80001,network:"mumbai",nodeUri:"https://polygon-mumbai.infura.io/v3",subgraphUri:"https://v4.subgraph.mumbai.oceanprotocol.com",explorerUri:"https://mumbai.polygonscan.com",gasFeeMultiplier:1.1}),E({},X,{chainId:56,network:"bsc",nodeUri:"https://bsc-dataseed.binance.org",subgraphUri:"https://v4.subgraph.bsc.oceanprotocol.com",explorerUri:"https://bscscan.com/",gasFeeMultiplier:1.05}),E({},X,{chainId:246,network:"energyweb",nodeUri:"https://rpc.energyweb.org",subgraphUri:"https://v4.subgraph.energyweb.oceanprotocol.com",explorerUri:"https://explorer.energyweb.org",gasFeeMultiplier:1.05}),E({},X,{chainId:1285,network:"moonriver",nodeUri:"https://moonriver.api.onfinality.io/public",subgraphUri:"https://v4.subgraph.moonriver.oceanprotocol.com",explorerUri:"https://moonriver.moonscan.io/",gasFeeMultiplier:1.05}),E({},X,{chainId:81001,network:"polygonedge",nodeUri:"https://rpc-edgenet.polygon.technology",providerUri:"https://v4.provider.goerli.oceanprotocol.com",subgraphUri:"https://v4.subgraph.goerli.oceanprotocol.com",explorerUri:"https://explorer-edgenet.polygon.technology/",gasFeeMultiplier:1.05}),E({},X,{chainId:100,network:"gen-x-testnet",nodeUri:"https://rpc.genx.minimal-gaia-x.eu",providerUri:"https://v4.provider.goerli.oceanprotocol.com",subgraphUri:"https://v4.subgraph.goerli.oceanprotocol.com",explorerUri:"https://logging.genx.minimal-gaia-x.eu/",gasFeeMultiplier:1.05})];class K{getAddressesFromEnv(t,e){let a;if(e){const{FixedPrice:i,Dispenser:n,ERC721Factory:o,OPFCommunityFeeCollector:r,Ocean:s,chainId:c,startBlock:l,veAllocate:d,veOCEAN:h,veDelegation:u,veFeeDistributor:m,veDelegationProxy:w,DFRewards:p,DFStrategyV1:g,veFeeEstimate:f}=e[t];a=E({nftFactoryAddress:o,opfCommunityFeeCollector:r,fixedRateExchangeAddress:i,dispenserAddress:n,oceanTokenAddress:s,chainId:c,startBlock:l,veAllocate:d,veOCEAN:h,veDelegation:u,veFeeDistributor:m,veDelegationProxy:w,DFRewards:p,DFStrategyV1:g,veFeeEstimate:f},process.env.AQUARIUS_URI&&{metadataCacheUri:process.env.AQUARIUS_URI})}else if(J[t]){const{FixedPrice:e,Dispenser:i,OPFCommunityFeeCollector:n,ERC721Factory:o,Ocean:r,chainId:s,startBlock:c,veAllocate:l,veOCEAN:d,veDelegation:h,veFeeDistributor:u,veDelegationProxy:m,DFRewards:w,DFStrategyV1:p,veFeeEstimate:g}=J[t];a=E({nftFactoryAddress:o,opfCommunityFeeCollector:n,fixedRateExchangeAddress:e,dispenserAddress:i,oceanTokenAddress:r,chainId:s,startBlock:c,veAllocate:l,veOCEAN:d,veDelegation:h,veFeeDistributor:u,veDelegationProxy:m,DFRewards:w,DFStrategyV1:p,veFeeEstimate:g},process.env.AQUARIUS_URI&&{metadataCacheUri:process.env.AQUARIUS_URI})}return a}getConfig(t,e){var a;const i="string"==typeof t?"network":"chainId";let n=Q.find(e=>e[i]===t);return n?(W.debug(`getConfig getAddressesFromEnv after filter by '${i}' to network'${null==(a=n)?void 0:a.network}'`),n=E({},n,this.getAddressesFromEnv(n.network)),E({},n,{nodeUri:e?`${n.nodeUri}/${e}`:n.nodeUri})):(W.error(`No config found for given network '${t}' filter by '${i}'`),null)}}class Y{constructor(t,e,a,i){this.web3=void 0,this.config=void 0,this.abi=void 0,this.web3=t,this.config=a||(new K).getConfig(e||"unknown"),this.abi=i||this.getDefaultAbi()}async amountToUnits(t,e,a){return T(this.web3,t,e,a)}async unitsToAmount(t,e,a){return x(this.web3,t,e,a)}async getFairGasPrice(){var t;return A(this.web3,null==(t=this.config)?void 0:t.gasFeeMultiplier)}getContract(t,e,a){return D(new this.web3.eth.Contract(a||this.abi,t,{from:e}),this.config)}}class tt extends Y{constructor(t,e,a,i,n){super(e,a,i,n),this.address=void 0,this.contract=void 0,this.address=t,this.contract=this.getContract(this.address)}}class et extends tt{getDefaultAbi(){return o.abi}async status(t){const e=await this.contract.methods.status(t).call();if(!e)throw new Error("Np dispenser found for the given datatoken address");return e.maxTokens=this.web3.utils.fromWei(e.maxTokens),e.maxBalance=this.web3.utils.fromWei(e.maxBalance),e.balance=this.web3.utils.fromWei(e.balance),e}async create(t,e,a,i,n,o){var r;const s=await B(e,this.contract.methods.create,t,this.web3.utils.toWei(a),this.web3.utils.toWei(i),e,n);return o?s:await k(e,s+1,this.web3,null==(r=this.config)?void 0:r.gasFeeMultiplier,this.contract.methods.create,t,this.web3.utils.toWei(a),this.web3.utils.toWei(i),e,n)}async activate(t,e,a,i,n){var o;const r=await B(i,this.contract.methods.activate,t,this.web3.utils.toWei(e),this.web3.utils.toWei(a));return n?r:await k(i,r+1,this.web3,null==(o=this.config)?void 0:o.gasFeeMultiplier,this.contract.methods.activate,t,this.web3.utils.toWei(e),this.web3.utils.toWei(a))}async deactivate(t,e,a){var i;const n=await B(e,this.contract.methods.deactivate,t);return a?n:await k(e,n+1,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.deactivate,t)}async setAllowedSwapper(t,e,a,i){var n;const o=await B(e,this.contract.methods.setAllowedSwapper,t,a);return i?o:await k(e,o+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,this.contract.methods.setAllowedSwapper,t,a)}async dispense(t,e,a="1",i,n){var o;const r=await B(e,this.contract.methods.dispense,t,this.web3.utils.toWei(a),i);return n?r:await k(e,r+1,this.web3,null==(o=this.config)?void 0:o.gasFeeMultiplier,this.contract.methods.dispense,t,this.web3.utils.toWei(a),i)}async ownerWithdraw(t,e,a){var i;const n=await B(e,this.contract.methods.ownerWithdraw,t);return a?n:await k(e,n+1,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.ownerWithdraw,t)}async isDispensable(t,e,a,i="1"){const o=await this.status(t);return!(!o||!1===o.active||new n(await e.balance(t,a)).greaterThanOrEqualTo(o.maxBalance)||new n(String(i)).greaterThan(o.maxTokens)||!new n(o.balance).greaterThanOrEqualTo(i)&&!0!==o.isMinter)}}class at extends tt{getDefaultAbi(){return r.abi}async generateExchangeId(t,e){return await this.contract.methods.generateExchangeId(t,e).call()}async buyDatatokens(t,e,a,i,n=C,o="0",r){var s;const c=await this.getExchange(e),l=this.web3.utils.toWei(o),d=await this.amountToUnits(c.datatoken,a,+c.dtDecimals),h=await this.amountToUnits(c.baseToken,i,+c.btDecimals),u=await B(t,this.contract.methods.buyDT,e,d,h,n,l);return r?u:await k(t,u+1,this.web3,null==(s=this.config)?void 0:s.gasFeeMultiplier,this.contract.methods.buyDT,e,d,h,n,l)}async sellDatatokens(t,e,a,i,n=C,o="0",r){var s;const c=await this.getExchange(e),l=this.web3.utils.toWei(o),d=await this.amountToUnits(c.datatoken,a,+c.dtDecimals),h=await this.amountToUnits(c.baseToken,i,+c.btDecimals),u=await B(t,this.contract.methods.sellDT,e,d,h,n,l);return r?u:await k(t,u+1,this.web3,null==(s=this.config)?void 0:s.gasFeeMultiplier,this.contract.methods.sellDT,e,d,h,n,l)}async getNumberOfExchanges(){return await this.contract.methods.getNumberOfExchanges().call()}async setRate(t,e,a,i){var n;const o=await B(t,this.contract.methods.setRate,e,this.web3.utils.toWei(a));return i?o:await k(t,o+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,this.contract.methods.setRate,e,this.web3.utils.toWei(a))}async setAllowedSwapper(t,e,a,i){var n;const o=await B(t,this.contract.methods.setAllowedSwapper,e,a);return i?o:await k(t,o+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,this.contract.methods.setAllowedSwapper,e,a)}async activate(t,e,a){var i;const n=await this.getExchange(e);if(!n)return null;if(!0===n.active)return null;const o=await B(t,this.contract.methods.toggleExchangeState,e);return a?o:await k(t,o+1,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.toggleExchangeState,e)}async deactivate(t,e,a){var i;const n=await this.getExchange(e);if(!n)return null;if(!1===n.active)return null;const o=await B(t,this.contract.methods.toggleExchangeState,e);return a?o:await k(t,o+1,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.toggleExchangeState,e)}async getRate(t){const e=await this.contract.methods.getRate(t).call();return await this.web3.utils.fromWei(e)}async getDatatokenSupply(t){const e=await this.contract.methods.getDTSupply(t).call(),a=await this.getExchange(t);return await this.unitsToAmount(a.datatoken,e,+a.dtDecimals)}async getBasetokenSupply(t){const e=await this.contract.methods.getBTSupply(t).call(),a=await this.getExchange(t);return await this.unitsToAmount(a.baseToken,e,+a.btDecimals)}async getAllowedSwapper(t){return await this.contract.methods.getAllowedSwapper(t).call()}async calcBaseInGivenDatatokensOut(t,e,a="0"){const i=await this.getExchange(t),n=await this.contract.methods.calcBaseInGivenOutDT(t,await this.amountToUnits(i.datatoken,e,+i.dtDecimals),this.web3.utils.toWei(a)).call();return{baseTokenAmount:await this.unitsToAmount(i.baseToken,n.baseTokenAmount,+i.btDecimals),marketFeeAmount:await this.unitsToAmount(i.baseToken,n.marketFeeAmount,+i.btDecimals),oceanFeeAmount:await this.unitsToAmount(i.baseToken,n.oceanFeeAmount,+i.btDecimals),consumeMarketFeeAmount:await this.unitsToAmount(i.baseToken,n.consumeMarketFeeAmount,+i.btDecimals)}}async getAmountBasetokensOut(t,e,a="0"){const i=await this.getExchange(t),n=await this.contract.methods.calcBaseOutGivenInDT(t,await this.amountToUnits(i.datatoken,e,+i.dtDecimals),this.web3.utils.toWei(a)).call();return await this.unitsToAmount(i.baseToken,n[0],+i.btDecimals)}async getExchange(t){const e=await this.contract.methods.getExchange(t).call();return e.dtDecimals=e.dtDecimals.toString(),e.btDecimals=e.btDecimals.toString(),e.dtBalance=await this.unitsToAmount(e.datatoken,e.dtBalance,+e.dtDecimals),e.btBalance=await this.unitsToAmount(e.baseToken,e.btBalance,+e.btDecimals),e.dtSupply=await this.unitsToAmount(e.datatoken,e.dtSupply,+e.dtDecimals),e.btSupply=await this.unitsToAmount(e.baseToken,e.btSupply,+e.btDecimals),e.fixedRate=this.web3.utils.fromWei(e.fixedRate),e.exchangeId=t,e}async getFeesInfo(t){const e=await this.contract.methods.getFeesInfo(t).call();e.opcFee=this.web3.utils.fromWei(e.opcFee.toString()),e.marketFee=this.web3.utils.fromWei(e.marketFee.toString());const a=await this.getExchange(t);return e.marketFeeAvailable=await this.unitsToAmount(a.baseToken,e.marketFeeAvailable,+a.btDecimals),e.oceanFeeAvailable=await this.unitsToAmount(a.baseToken,e.oceanFeeAvailable,+a.btDecimals),e.exchangeId=t,e}async getExchanges(){return await this.contract.methods.getExchanges().call()}async isActive(t){return await this.contract.methods.isActive(t).call()}async activateMint(t,e,a){var i;const n=await this.getExchange(e);if(!n)return null;if(!0===n.withMint)return null;const o=await B(t,this.contract.methods.toggleMintState,e,!0);return a?o:await k(t,o+1,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.toggleMintState,e,!0)}async deactivateMint(t,e,a){var i;const n=await this.getExchange(e);if(!n)return null;if(!1===n.withMint)return null;const o=await B(t,this.contract.methods.toggleMintState,e,!1);return a?o:await k(t,o+1,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.toggleMintState,e,!1)}async collectBasetokens(t,e,a,i){var n;if(!await this.getExchange(e))return null;const o=await this.contract.methods.getExchange(e).call(),r=await this.amountToUnits(o.baseToken,a,+o.btDecimals),s=await B(t,this.contract.methods.collectBT,e,r);return i?s:await k(t,s+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,this.contract.methods.collectBT,e,r)}async collectDatatokens(t,e,a,i){var n;if(!await this.getExchange(e))return null;const o=await this.contract.methods.getExchange(e).call(),r=await this.amountToUnits(o.datatoken,a,+o.dtDecimals),s=await B(t,this.contract.methods.collectDT,e,r);return i?s:await k(t,s+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,this.contract.methods.collectDT,e,r)}async collectMarketFee(t,e,a){var i;if(!await this.getExchange(e))return null;const n=await B(t,this.contract.methods.collectMarketFee,e);return a?n:await k(t,n+1,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.collectMarketFee,e)}async collectOceanFee(t,e,a){var i;if(!await this.getExchange(e))return null;const n=await B(t,this.contract.methods.collectOceanFee,e);return a?n:await k(t,n+1,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.collectOceanFee,e)}async getOPCCollector(){return await this.contract.methods.opcCollector().call()}async getRouter(){return await this.contract.methods.router().call()}async getExchangeOwner(t){return await(await this.getExchange(t)).exchangeOwner}async updateMarketFee(t,e,a,i){var n;const o=await B(t,this.contract.methods.updateMarketFee,e,this.web3.utils.toWei(a));return i?o:await k(t,o+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,this.contract.methods.updateMarketFee,e,this.web3.utils.toWei(a))}async updateMarketFeeCollector(t,e,a,i){var n;const o=await B(t,this.contract.methods.updateMarketFeeCollector,e,a);return i?o:await k(t,o+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,this.contract.methods.updateMarketFeeCollector,e,a)}}class it extends tt{getDefaultAbi(){return s.abi}async buyDatatokenBatch(t,e,a){var i;const n=await B(t,this.contract.methods.buyDTBatch,e);return a?n:await k(t,n+1,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.buyDTBatch,e)}async isApprovedToken(t){return await this.contract.methods.isApprovedToken(t).call()}async isFixedPrice(t){return await this.contract.methods.isFixedRateContract(t).call()}async getOwner(){return await this.contract.methods.routerOwner().call()}async getNFTFactory(){return await this.contract.methods.factory().call()}async addApprovedToken(t,e,a){var i;if(await this.getOwner()!==t)throw new Error("Caller is not Router Owner");const n=await B(t,this.contract.methods.addApprovedToken,e);return a?n:await k(t,n+1,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.addApprovedToken,e)}async removeApprovedToken(t,e,a){var i;if(await this.getOwner()!==t)throw new Error("Caller is not Router Owner");const n=await B(t,this.contract.methods.removeApprovedToken,e);return a?n:await k(t,n+1,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.removeApprovedToken,e)}async addFixedRateContract(t,e,a){var i;if(await this.getOwner()!==t)throw new Error("Caller is not Router Owner");const n=await B(t,this.contract.methods.addFixedRateContract,e);return a?n:await k(t,n+1,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.addFixedRateContract,e)}async removeFixedRateContract(t,e,a){var i;if(await this.getOwner()!==t)throw new Error("Caller is not Router Owner");const n=await B(t,this.contract.methods.removeFixedRateContract,e);return a?n:await k(t,n+1,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.removeFixedRateContract,e)}async addDispenserContract(t,e,a){var i;if(await this.getOwner()!==t)throw new Error("Caller is not Router Owner");const n=await B(t,this.contract.methods.addDispenserContract,e);return a?n:await k(t,n+1,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.addDispenserContract,e)}async removeDispenserContract(t,e,a){var i;if(await this.getOwner()!==t)throw new Error("Caller is not Router Owner");const n=await B(t,this.contract.methods.removeDispenserContract,e);return a?n:await k(t,n+1,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.removeDispenserContract,e)}async getOPCFee(t){return await this.contract.methods.getOPCFee(t).call()}async getCurrentOPCFee(){return await this.contract.methods.swapOceanFee().call()}async updateOPCFee(t,e,a,i,n,o){var r;if(await this.getOwner()!==t)throw new Error("Caller is not Router Owner");const s=await B(t,this.contract.methods.updateOPCFee,e,a,i,n);return o?s:await k(t,s+1,this.web3,null==(r=this.config)?void 0:r.gasFeeMultiplier,this.contract.methods.updateOPCFee,e,a,i,n)}}class nt extends Y{getDefaultAbi(){return d.abi}async createDatatoken(t,e,a,i,n,o,r,s,c,l,d,h){var u,m,w,p;if(!0!==(await this.getNftPermissions(t,e)).deployERC20)throw new Error("Caller is not DatatokenDeployer");d||(d=1),c&&l||({name:c,symbol:l}=P());const g=this.getContract(t),f=await B(e,g.methods.createERC20,d,[c,l],[a,i,n,o],[this.web3.utils.toWei(s),this.web3.utils.toWei(r)],[]);if(h)return f;const b=await k(e,f+1,this.web3,null==(u=this.config)?void 0:u.gasFeeMultiplier,g.methods.createERC20,d,[c,l],[a,i,n,o],[this.web3.utils.toWei(s),this.web3.utils.toWei(r)],[]);return null==b||null==(m=b.events)||null==(w=m.TokenCreated)||null==(p=w.returnValues)?void 0:p[0]}async addManager(t,e,a,i){var n;const o=this.getContract(t);if(await this.getNftOwner(t)!==e)throw new Error("Caller is not NFT Owner");const r=await B(e,o.methods.addManager,a);return i?r:await k(e,r+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,o.methods.addManager,a)}async removeManager(t,e,a,i){var n;const o=this.getContract(t);if(await this.getNftOwner(t)!==e)throw new Error("Caller is not NFT Owner");const r=await B(e,o.methods.removeManager,a);return i?r:await k(e,r+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,o.methods.removeManager,a)}async addDatatokenDeployer(t,e,a,i){var n;const o=this.getContract(t);if(!0!==(await this.getNftPermissions(t,e)).manager)throw new Error("Caller is not Manager");const r=await B(e,o.methods.addToCreateERC20List,a);return i?r:await k(e,r+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,o.methods.addToCreateERC20List,a)}async removeDatatokenDeployer(t,e,a,i){var n;const o=this.getContract(t);if(!0!==(await this.getNftPermissions(t,e)).manager||e===a&&!0!==(await this.getNftPermissions(t,e)).deployERC20)throw new Error("Caller is not Manager nor DatatokenDeployer");const r=await B(e,o.methods.removeFromCreateERC20List,a);return i?r:await k(e,r+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,o.methods.removeFromCreateERC20List,a)}async addMetadataUpdater(t,e,a,i){var n;const o=this.getContract(t);if(!0!==(await this.getNftPermissions(t,e)).manager)throw new Error("Caller is not Manager");const r=await B(e,o.methods.addToMetadataList,a);return i?r:await k(e,r+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,o.methods.addToMetadataList,a)}async removeMetadataUpdater(t,e,a,i){var n;const o=this.getContract(t);if(!0!==(await this.getNftPermissions(t,e)).manager||e!==a&&!0!==(await this.getNftPermissions(t,e)).updateMetadata)throw new Error("Caller is not Manager nor Metadata Updater");const r=await B(e,o.methods.removeFromMetadataList,a);return i?r:await k(e,r+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,o.methods.removeFromMetadataList,a)}async addStoreUpdater(t,e,a,i){var n;const o=this.getContract(t);if(!0!==(await this.getNftPermissions(t,e)).manager)throw new Error("Caller is not Manager");const r=await B(e,o.methods.addTo725StoreList,a);return i?r:await k(e,r+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,o.methods.addTo725StoreList,a)}async removeStoreUpdater(t,e,a,i){var n;const o=this.getContract(t);if(!0!==(await this.getNftPermissions(t,e)).manager||e!==a&&!0!==(await this.getNftPermissions(t,e)).store)throw new Error("Caller is not Manager nor storeUpdater");const r=await B(e,o.methods.removeFrom725StoreList,a);return i?r:await k(e,r+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,o.methods.removeFrom725StoreList,a)}async cleanPermissions(t,e,a){var i;const n=this.getContract(t);if(await this.getNftOwner(t)!==e)throw new Error("Caller is not NFT Owner");const o=await B(e,n.methods.cleanPermissions);return a?o:await k(e,o+1,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,n.methods.cleanPermissions)}async transferNft(t,e,a,i,n){var o;const r=this.getContract(t);if(await this.getNftOwner(t)!==e)throw new Error("Caller is not NFT Owner");const s=i||1,c=await B(e,r.methods.transferFrom,e,a,s);return n?c:await k(e,c+1,this.web3,null==(o=this.config)?void 0:o.gasFeeMultiplier,r.methods.transferFrom,e,a,s)}async safeTransferNft(t,e,a,i,n){var o;const r=this.getContract(t);if(await this.getNftOwner(t)!==e)throw new Error("Caller is not NFT Owner");const s=i||1,c=await B(e,r.methods.safeTransferFrom,e,a,s);return n?c:await k(e,c+1,this.web3,null==(o=this.config)?void 0:o.gasFeeMultiplier,r.methods.safeTransferFrom,e,a,s)}async setMetadata(t,e,a,i,n,o,r,s,c,l){var d;const h=this.getContract(t);if(c||(c=[]),!(await this.getNftPermissions(t,e)).updateMetadata)throw new Error("Caller is not Metadata updater");const u=await B(e,h.methods.setMetaData,a,i,n,o,r,s,c);return l?u:await k(e,u+1,this.web3,null==(d=this.config)?void 0:d.gasFeeMultiplier,h.methods.setMetaData,a,i,n,o,r,s,c)}async setMetadataAndTokenURI(t,e,a,i){var n;const o=this.getContract(t);if(!(await this.getNftPermissions(t,e)).updateMetadata)throw new Error("Caller is not Metadata updater");const r=E({},a,{metadataProofs:a.metadataProofs||[]}),s=await B(e,o.methods.setMetaDataAndTokenURI,r);return i?s:await k(e,s+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,o.methods.setMetaDataAndTokenURI,r)}async setMetadataState(t,e,a,i){var n;const o=this.getContract(t);if(!(await this.getNftPermissions(t,e)).updateMetadata)throw new Error("Caller is not Metadata updater");const r=await B(e,o.methods.setMetaDataState,a);return i?r:await k(e,r+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,o.methods.setMetaDataState,a)}async setTokenURI(t,e,a,i){var n;const o=this.getContract(t),r=await B(e,o.methods.setTokenURI,"1",a);return i?r:await k(e,r+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,o.methods.setTokenURI,"1",a)}async getNftOwner(t){const e=this.getContract(t);return await e.methods.ownerOf(1).call()}async getNftPermissions(t,e){const a=this.getContract(t);return await a.methods.getPermissions(e).call()}async getMetadata(t){const e=this.getContract(t);return await e.methods.getMetaData().call()}async isDatatokenDeployer(t,e){const a=this.getContract(t);return await a.methods.isERC20Deployer(e).call()}async setData(t,e,a,i){var n;if(!0!==(await this.getNftPermissions(t,e)).store)throw new Error("User is not ERC20 store updater");const o=this.getContract(t),r=this.web3.utils.keccak256(a),s=this.web3.utils.asciiToHex(i),c=await B(e,o.methods.setNewData,r,s);return await k(e,c+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,o.methods.setNewData,r,s)}async getData(t,e){const a=this.getContract(t),i=this.web3.utils.keccak256(e),n=await a.methods.getData(i).call();return n?this.web3.utils.hexToAscii(n):null}async getTokenURI(t,e){const a=this.getContract(t);return await a.methods.tokenURI(e).call()}}class ot extends Y{getDefaultAbi(){return c.abi}constructor(t,e,a,i,n){super(t,e,a,i),this.abiEnterprise=void 0,this.nft=void 0,this.abiEnterprise=n||l.abi,this.nft=new nt(this.web3)}async approve(t,e,a,i,n){var o;const r=this.getContract(t),s=await B(i,r.methods.approve,e,this.web3.utils.toWei(a));return n?s:await k(i,s+1,this.web3,null==(o=this.config)?void 0:o.gasFeeMultiplier,r.methods.approve,e,this.web3.utils.toWei(a))}async createFixedRate(t,e,a,i){var n;const o=this.getContract(t);if(!await this.isDatatokenDeployer(t,e))throw new Error("User is not Datatoken Deployer");a.allowedConsumer||(a.allowedConsumer=C);const r=!1===a.withMint?0:1,s=await B(e,o.methods.createFixedRate,a.fixedRateAddress,[a.baseTokenAddress,a.owner,a.marketFeeCollector,a.allowedConsumer],[a.baseTokenDecimals,a.datatokenDecimals,a.fixedRate,a.marketFee,r]);return i?s:await k(e,s+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,o.methods.createFixedRate,a.fixedRateAddress,[a.baseTokenAddress,a.owner,a.marketFeeCollector,a.allowedConsumer],[a.baseTokenDecimals,a.datatokenDecimals,a.fixedRate,a.marketFee,r])}async createDispenser(t,e,a,i,n){var o;if(!await this.isDatatokenDeployer(t,e))throw new Error("User is not Datatoken Deployer");const r=this.getContract(t);i.allowedSwapper||(i.allowedSwapper=C),i.withMint=!1!==i.withMint;const s=await B(e,r.methods.createDispenser,a,i.maxTokens,i.maxBalance,i.withMint,i.allowedSwapper);return n?s:await k(e,s+1,this.web3,null==(o=this.config)?void 0:o.gasFeeMultiplier,r.methods.createDispenser,a,i.maxTokens,i.maxBalance,i.withMint,i.allowedSwapper)}async mint(t,e,a,i,o){const r=this.getContract(t);if(!0!==(await this.getPermissions(t,e)).minter)throw new Error("Caller is not Minter");const s=await this.getCap(t);if(new n(s).gte(a)){var c;const t=await B(e,r.methods.mint,i||e,this.web3.utils.toWei(a));return o?t:await k(e,t+1,this.web3,null==(c=this.config)?void 0:c.gasFeeMultiplier,r.methods.mint,i||e,this.web3.utils.toWei(a))}throw new Error("Mint amount exceeds cap available")}async addMinter(t,e,a,i){var n;const o=this.getContract(t);if(!0!==await this.isDatatokenDeployer(t,e))throw new Error("Caller is not DatatokenDeployer");const r=await B(e,o.methods.addMinter,a);return i?r:await k(e,r+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,o.methods.addMinter,a)}async removeMinter(t,e,a,i){var n;const o=this.getContract(t);if(!0!==await this.isDatatokenDeployer(t,e))throw new Error("Caller is not DatatokenDeployer");const r=await B(e,o.methods.removeMinter,a);return i?r:await k(e,r+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,o.methods.removeMinter,a)}async addPaymentManager(t,e,a,i){var n;const o=this.getContract(t);if(!0!==await this.isDatatokenDeployer(t,e))throw new Error("Caller is not DatatokenDeployer");const r=await B(e,o.methods.addPaymentManager,a);return i?r:await k(e,r+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,o.methods.addPaymentManager,a)}async removePaymentManager(t,e,a,i){var n;const o=this.getContract(t);if(!0!==await this.isDatatokenDeployer(t,e))throw new Error("Caller is not DatatokenDeployer");const r=await B(e,o.methods.removePaymentManager,a);return i?r:await k(e,r+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,o.methods.removePaymentManager,a)}async setPaymentCollector(t,e,a,i){var n;const o=this.getContract(t),r=(await this.getPermissions(t,e)).paymentManager,s=!r&&await this.getNFTAddress(t),c=s&&await this.nft.getNftOwner(s)===e,l=s&&!c&&await this.nft.getNftPermissions(s,e);if(!r&&!c&&!(null==l?void 0:l.deployERC20))throw new Error("Caller is not Fee Manager, owner or Datatoken Deployer");const d=await B(e,o.methods.setPaymentCollector,a);return i?d:await k(e,d+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,o.methods.setPaymentCollector,a)}async getPaymentCollector(t){const e=this.getContract(t);return await e.methods.getPaymentCollector().call()}async transfer(t,e,a,i){const n=this.web3.utils.toWei(a);return this.transferWei(t,e,n,i)}async transferWei(t,e,a,i,n){var o;const r=this.getContract(t),s=await B(i,r.methods.transfer,e,a);return n?s:await k(i,s+1,this.web3,null==(o=this.config)?void 0:o.gasFeeMultiplier,r.methods.transfer,e,a)}async startOrder(t,e,a,i,n,o,r){var s;const c=this.getContract(t);o||(o={consumeMarketFeeAddress:C,consumeMarketFeeToken:C,consumeMarketFeeAmount:"0"});const l=await B(e,c.methods.startOrder,a,i,n,o);return r?l:await k(e,l+1,this.web3,null==(s=this.config)?void 0:s.gasFeeMultiplier,c.methods.startOrder,a,i,n,o)}async reuseOrder(t,e,a,i,n){var o;const r=this.getContract(t),s=await B(e,r.methods.reuseOrder,a,i);return n?s:await k(e,s+1,this.web3,null==(o=this.config)?void 0:o.gasFeeMultiplier,r.methods.reuseOrder,a,i)}async buyFromFreAndOrder(t,e,a,i,n){var o;const r=this.getContract(t,null,this.abiEnterprise),s=await this.getFreOrderParams(i),c=await B(e,r.methods.buyFromFreAndOrder,a,s);return n?c:await k(e,c+1,this.web3,null==(o=this.config)?void 0:o.gasFeeMultiplier,r.methods.buyFromFreAndOrder,a,s)}async buyFromDispenserAndOrder(t,e,a,i,n){var o;const r=this.getContract(t,null,this.abiEnterprise),s=await B(e,r.methods.buyFromDispenserAndOrder,a,i);return n?s:await k(e,s+1,this.web3,null==(o=this.config)?void 0:o.gasFeeMultiplier,r.methods.buyFromDispenserAndOrder,a,i)}async setData(t,e,a,i){var n;if(!await this.isDatatokenDeployer(t,e))throw new Error("User is not Datatoken Deployer");const o=this.getContract(t),r=this.web3.utils.asciiToHex(a),s=await B(e,o.methods.setData,r);return i?s:await k(e,s+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,o.methods.setData,r)}async cleanPermissions(t,e,a){var i;if(await this.nft.getNftOwner(await this.getNFTAddress(t))!==e)throw new Error("Caller is NOT Nft Owner");const n=this.getContract(t),o=await B(e,n.methods.cleanPermissions);return a?o:await k(e,o+1,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,n.methods.cleanPermissions)}async getPermissions(t,e){const a=this.getContract(t);return await a.methods.permissions(e).call()}async getCap(t){const e=this.getContract(t),a=await e.methods.cap().call();return this.web3.utils.fromWei(a)}async getDecimals(t){const e=this.getContract(t);return await e.methods.decimals().call()}async getSymbol(t){const e=this.getContract(t);return await e.methods.symbol().call()}async getName(t){const e=this.getContract(t);return await e.methods.name().call()}async getNFTAddress(t){const e=this.getContract(t);return await e.methods.getERC721Address().call()}async isDatatokenDeployer(t,e){const a=this.getContract(t);return await a.methods.isERC20Deployer(e).call()}async balance(t,e){const a=this.getContract(t,e),i=await a.methods.balanceOf(e).call();return this.web3.utils.fromWei(i)}async setPublishingMarketFee(t,e,a,i,n,o){var r;const s=this.getContract(t,n);if((await s.methods.getPublishingMarketFee().call())[0]!==n)throw new Error("Caller is not the Publishing Market Fee Address");const c=await B(n,s.methods.setPublishingMarketFee,e,a,i);return o?c:await k(n,c+1,this.web3,null==(r=this.config)?void 0:r.gasFeeMultiplier,s.methods.setPublishingMarketFee,e,a,i)}async getPublishingMarketFee(t,e){const a=this.getContract(t,e),i=await a.methods.getPublishingMarketFee().call();return{publishMarketFeeAddress:i[0],publishMarketFeeToken:i[1],publishMarketFeeAmount:i[2]}}async getFreOrderParams(t){return{exchangeContract:t.exchangeContract,exchangeId:t.exchangeId,maxBaseTokenAmount:await T(this.web3,t.baseTokenAddress,t.maxBaseTokenAmount,t.baseTokenDecimals),swapMarketFee:await T(this.web3,t.baseTokenAddress,t.swapMarketFee,t.baseTokenDecimals),marketFeeAddress:t.marketFeeAddress}}}class rt extends tt{getDefaultAbi(){return h.abi}async createNFT(t,e,a){var i,n,o,r;if(e.templateIndex||(e.templateIndex=1),!e.name||!e.symbol){const{name:t,symbol:a}=P();e.name=t,e.symbol=a}if(e.templateIndex>await this.getCurrentNFTTemplateCount())throw new Error("Template index doesnt exist");if(0===e.templateIndex)throw new Error("Template index cannot be ZERO");if(!1===(await this.getNFTTemplate(e.templateIndex)).isActive)throw new Error("Template is not active");const s=await B(t,this.contract.methods.deployERC721Contract,e.name,e.symbol,e.templateIndex,C,C,e.tokenURI,e.transferable,e.owner);if(a)return s;const c=await k(t,s+1,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.deployERC721Contract,e.name,e.symbol,e.templateIndex,C,C,e.tokenURI,e.transferable,e.owner);return null==c||null==(n=c.events)||null==(o=n.NFTCreated)||null==(r=o.returnValues)?void 0:r[0]}async getCurrentNFTCount(){return await this.contract.methods.getCurrentNFTCount().call()}async getCurrentTokenCount(){return await this.contract.methods.getCurrentTokenCount().call()}async getOwner(){return await this.contract.methods.owner().call()}async getCurrentNFTTemplateCount(){return await this.contract.methods.getCurrentNFTTemplateCount().call()}async getCurrentTokenTemplateCount(){return await this.contract.methods.getCurrentTemplateCount().call()}async getNFTTemplate(t){if(t>await this.getCurrentNFTTemplateCount())throw new Error("Template index doesnt exist");if(0===t)throw new Error("Template index cannot be ZERO");return await this.contract.methods.getNFTTemplate(t).call()}async getTokenTemplate(t){return await this.contract.methods.getTokenTemplate(t).call()}async checkDatatoken(t){return await this.contract.methods.erc20List(t).call()}async checkNFT(t){return await this.contract.methods.erc721List(t).call()}async addNFTTemplate(t,e,a){var i;if(await this.getOwner()!==t)throw new Error("Caller is not Factory Owner");if(e===C)throw new Error("Template cannot be ZERO address");const n=await B(t,this.contract.methods.add721TokenTemplate,e);return a?n:await k(t,n+1,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.add721TokenTemplate,e)}async disableNFTTemplate(t,e,a){var i;if(await this.getOwner()!==t)throw new Error("Caller is not Factory Owner");if(e>await this.getCurrentNFTTemplateCount())throw new Error("Template index doesnt exist");if(0===e)throw new Error("Template index cannot be ZERO");const n=await B(t,this.contract.methods.disable721TokenTemplate,e);return a?n:await k(t,n+1,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.disable721TokenTemplate,e)}async reactivateNFTTemplate(t,e,a){var i;if(await this.getOwner()!==t)throw new Error("Caller is not Factory Owner");if(e>await this.getCurrentNFTTemplateCount())throw new Error("Template index doesnt exist");if(0===e)throw new Error("Template index cannot be ZERO");const n=await B(t,this.contract.methods.reactivate721TokenTemplate,e);return a?n:await k(t,n+1,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.reactivate721TokenTemplate,e)}async addTokenTemplate(t,e,a){var i;if(await this.getOwner()!==t)throw new Error("Caller is not Factory Owner");if(e===C)throw new Error("Template cannot be address ZERO");const n=await B(t,this.contract.methods.addTokenTemplate,e);return a?n:await k(t,n+1,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.addTokenTemplate,e)}async disableTokenTemplate(t,e,a){var i;if(await this.getOwner()!==t)throw new Error("Caller is not Factory Owner");if(e>await this.getCurrentTokenTemplateCount())throw new Error("Template index doesnt exist");if(0===e)throw new Error("Template index cannot be ZERO");if(!1===(await this.getTokenTemplate(e)).isActive)throw new Error("Template is already disabled");const n=await B(t,this.contract.methods.disableTokenTemplate,e);return a?n:await k(t,n+1,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.disableTokenTemplate,e)}async reactivateTokenTemplate(t,e,a){var i;if(await this.getOwner()!==t)throw new Error("Caller is not Factory Owner");if(e>await this.getCurrentTokenTemplateCount())throw new Error("Template index doesnt exist");if(0===e)throw new Error("Template index cannot be ZERO");if(!0===(await this.getTokenTemplate(e)).isActive)throw new Error("Template is already active");const n=await B(t,this.contract.methods.reactivateTokenTemplate,e);return a?n:await k(t,n+1,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.reactivateTokenTemplate,e)}async startMultipleTokenOrder(t,e,a){var i;if(e.length>50)throw new Error("Too many orders");const n=await B(t,this.contract.methods.startMultipleTokenOrder,e);return a?n:await k(t,n+1,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.startMultipleTokenOrder,e)}async createNftWithDatatoken(t,e,a,i){var n;const o=this.getErcCreationParams(a),r=await B(t,this.contract.methods.createNftWithErc20,e,o);return i?r:await k(t,r+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,this.contract.methods.createNftWithErc20,e,o)}async createNftWithDatatokenWithFixedRate(t,e,a,i,n){var o;const r=this.getErcCreationParams(a),s=this.getFreCreationParams(i),c=await B(t,this.contract.methods.createNftWithErc20WithFixedRate,e,r,s);return n?c:await k(t,c+1,this.web3,null==(o=this.config)?void 0:o.gasFeeMultiplier,this.contract.methods.createNftWithErc20WithFixedRate,e,r,s)}async createNftWithDatatokenWithDispenser(t,e,i,n,o){var r;const s=this.getErcCreationParams(i);n.maxBalance=a.utils.toWei(n.maxBalance),n.maxTokens=a.utils.toWei(n.maxTokens);const c=await B(t,this.contract.methods.createNftWithErc20WithDispenser,e,s,n);return o?c:await k(t,c+1,this.web3,null==(r=this.config)?void 0:r.gasFeeMultiplier,this.contract.methods.createNftWithErc20WithDispenser,e,s,n)}getErcCreationParams(t){let e,i;return t.name&&t.symbol||({name:e,symbol:i}=P()),{templateIndex:t.templateIndex,strings:[t.name||e,t.symbol||i],addresses:[t.minter,t.paymentCollector,t.mpFeeAddress,t.feeToken],uints:[a.utils.toWei(t.cap),a.utils.toWei(t.feeAmount)],bytess:[]}}getFreCreationParams(t){t.allowedConsumer||(t.allowedConsumer=C);const e=!1===t.withMint?0:1;return{fixedPriceAddress:t.fixedRateAddress,addresses:[t.baseTokenAddress,t.owner,t.marketFeeCollector,t.allowedConsumer],uints:[t.baseTokenDecimals,t.datatokenDecimals,a.utils.toWei(t.fixedRate),a.utils.toWei(t.marketFee),e]}}}class st extends tt{getDefaultAbi(){return u.abi}async lockTokens(t,e,a,i){var n;const o=await this.amountToUnits(await this.getToken(),e),r=await B(t,this.contract.methods.create_lock,o,a);return i?r:await k(t,r+2e4,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,this.contract.methods.create_lock,o,a)}async depositFor(t,e,a,i){var n;const o=await this.amountToUnits(await this.getToken(),a),r=await B(t,this.contract.methods.deposit_for,e,o);return i?r:await k(t,r+2e4,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,this.contract.methods.deposit_for,e,o)}async increaseAmount(t,e,a){var i;const n=await this.amountToUnits(await this.getToken(),e),o=await B(t,this.contract.methods.increase_amount,n);return a?o:await k(t,o+2e4,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.increase_amount,n)}async increaseUnlockTime(t,e,a){var i;const n=await B(t,this.contract.methods.increase_unlock_time,e);return a?n:await k(t,n+2e4,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.increase_unlock_time,e)}async withdraw(t,e){var a;const i=await B(t,this.contract.methods.withdraw);return e?i:await k(t,i+1,this.web3,null==(a=this.config)?void 0:a.gasFeeMultiplier,this.contract.methods.withdraw)}async getVotingPower(t){return await this.contract.methods.balanceOf(t).call()}async getLockedAmount(t){const e=await this.contract.methods.locked(t).call();return await this.unitsToAmount(await this.getToken(),e.amount)}async lockEnd(t){return await this.contract.methods.locked__end(t).call()}async totalSupply(){return await this.unitsToAmount(await this.getToken(),await this.contract.methods.totalSupply().call())}async getToken(){return await this.contract.methods.token().call()}}class ct extends tt{getDefaultAbi(){return m.abi}async claim(t,e){var a;const i=await B(t,this.contract.methods.claim);return e?i:await k(t,i+2e4,this.web3,null==(a=this.config)?void 0:a.gasFeeMultiplier,this.contract.methods.claim)}async claimMany(t,e,a){var i;const n=await B(t,this.contract.methods.claim_many,e);return a?n:await k(t,n+2e4,this.web3,null==(i=this.config)?void 0:i.gasFeeMultiplier,this.contract.methods.claim_many,e)}}class lt extends tt{getDefaultAbi(){return w.abi}async estimateClaim(t){const e=await this.contract.methods.estimateClaim(t).call(),a=new st(await this.contract.methods.voting_escrow().call(),this.web3);return await this.unitsToAmount(await a.getToken(),e)}}class dt extends tt{getDefaultAbi(){return p.abi}async setAllocation(t,e,a,i,n){var o;const r=await B(t,this.contract.methods.setAllocation,e,a,i);return n?r:await k(t,r+1,this.web3,null==(o=this.config)?void 0:o.gasFeeMultiplier,this.contract.methods.setAllocation,e,a,i)}async setBatchAllocation(t,e,a,i,n){var o;const r=await B(t,this.contract.methods.setBatchAllocation,e,a,i);return n?r:await k(t,r+1,this.web3,null==(o=this.config)?void 0:o.gasFeeMultiplier,this.contract.methods.setBatchAllocation,e,a,i)}async getTotalAllocation(t){return await this.contract.methods.getTotalAllocation(t).call()}async getVeAllocation(t,e,a){return await this.contract.methods.getveAllocation(t,e,a).call()}}class ht extends tt{getDefaultAbi(){return g.abi}async getAvailableRewards(t,e){const a=await this.contract.methods.claimable(t,e).call();return await this.unitsToAmount(e,a)}async claimRewards(t,e,a,i){var n;const o=await B(t,this.contract.methods.claimFor,e,a);return i?o:await k(t,o+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,this.contract.methods.claimFor,e,a)}async allocateRewards(t,e,a,i,n){var o;for(let t=0;t<a.length;t++)a[t]=await this.amountToUnits(i,a[t]);const r=await B(t,this.contract.methods.allocate,e,a,i);return n?r:await k(t,r+1,this.web3,null==(o=this.config)?void 0:o.gasFeeMultiplier,this.contract.methods.allocate,e,a,i)}}class ut extends tt{getDefaultAbi(){return f.abi}async getMultipleAvailableRewards(t,e){const a=await this.contract.methods.claimables(t,e).call(),i=[];for(let t=0;t<a.length;t++)i.push(await this.unitsToAmount(e[t],a[t]));return i}async claimMultipleRewards(t,e,a,i){var n;const o=await B(t,this.contract.methods.claimMultiple,e,a);return i?o:await k(t,o+1,this.web3,null==(n=this.config)?void 0:n.gasFeeMultiplier,this.contract.methods.claimMultiple,e,a)}}class mt{constructor(t){this.aquariusURL=void 0,this.aquariusURL=t}async resolve(t,e){const a=this.aquariusURL+"/api/aquarius/assets/ddo/"+t;try{const t=await i(a,{method:"GET",headers:{"Content-Type":"application/json"},signal:e});if(t.ok)return await t.json();throw new Error("HTTP request failed with status "+t.status)}catch(t){throw W.error(t),new Error("HTTP request failed")}}async waitForAqua(t,e,a){let n=0;do{try{const n=this.aquariusURL+"/api/aquarius/assets/ddo/"+t,o=await i(n,{method:"GET",headers:{"Content-Type":"application/json"},signal:a});if(o.ok){const t=await o.json();if(!e)return t;if(t.event&&t.event.txid===e)return t}}catch(t){}await I(1500),n++}while(n<100);return null}async validate(t,e){const a={valid:!1};let n;try{const o=this.aquariusURL+"/api/aquarius/assets/ddo/validate",r=await i(o,{method:"POST",body:JSON.stringify(t),headers:{"Content-Type":"application/octet-stream"},signal:e});n=await r.json(),200===r.status?(a.valid=!0,a.hash=n.hash,a.proof={validatorAddress:n.publicKey,r:n.r[0],s:n.s[0],v:n.v}):(a.errors=n,W.error("validate Metadata failed:",r.status,a.errors))}catch(t){W.error("Error validating metadata: ",t)}return a}async getAssetMetadata(t,e){const a=this.aquariusURL+"/api/aquarius/assets/metadata/"+t;try{const t=await i(a,{method:"GET",headers:{"Content-Type":"application/json"},signal:e});if(t.ok)return t.json();throw new Error("getAssetMetadata failed: "+t.status+t.statusText)}catch(t){throw W.error("Error getting metadata: ",t),new Error("Error getting metadata: "+t)}}async querySearch(t,e){const a=this.aquariusURL+"/api/aquarius/assets/query";try{const n=await i(a,{method:"POST",body:JSON.stringify(t),headers:{"Content-Type":"application/json"},signal:e});if(n.ok)return n.json();throw new Error("querySearch failed: "+n.status+n.statusText)}catch(t){throw W.error("Error querying metadata: ",t),new Error("Error querying metadata: "+t)}}}class wt{async getEndpoints(t){try{const e=await this.getData(t);return await e.json()}catch(t){throw W.error("Finding the service endpoints failed:",t),new Error("HTTP request failed calling Provider")}}getEndpointURL(t,e){return t?t.find(t=>t.serviceName===e):null}async getServiceEndpoints(t,e){const a=[];for(const i in e.serviceEndpoints)a.push({serviceName:i,method:e.serviceEndpoints[i][0],urlPath:t+e.serviceEndpoints[i][1]});return a}async getNonce(t,e,a,n,o){n||(n=await this.getEndpoints(t)),o||(o=await this.getServiceEndpoints(t,n));const r=this.getEndpointURL(o,"nonce")?this.getEndpointURL(o,"nonce").urlPath:null;if(!r)return null;try{const t=await i(r+`?userAddress=${e}`,{method:"GET",headers:{"Content-Type":"application/json"},signal:a});return(await t.json()).nonce.toString()}catch(t){throw W.error(t),new Error("HTTP request failed calling Provider")}}async signProviderRequest(t,e,a,i){const n=t.utils.soliditySha3({t:"bytes",v:t.utils.utf8ToHex(a)});return t&&t.currentProvider&&t.currentProvider.isMetaMask?await t.eth.personal.sign(n,e,i):await t.eth.sign(n,e)}async encrypt(t,e,a,n){const o=await this.getEndpoints(a),r=await this.getServiceEndpoints(a,o),s=(this.getEndpointURL(r,"encrypt")?this.getEndpointURL(r,"encrypt").urlPath:null)+`?chainId=${e}`;if(!s)return null;try{const e=await i(s,{method:"POST",body:JSON.stringify(t),headers:{"Content-Type":"application/octet-stream"},signal:n});return await e.text()}catch(t){throw W.error(t),new Error("HTTP request failed calling Provider")}}async checkDidFiles(t,e,a,n=!1,o){const r=await this.getEndpoints(a),s=await this.getServiceEndpoints(a,r),c={did:t,serviceId:e,checksum:n},l=[],d=this.getEndpointURL(s,"fileinfo")?this.getEndpointURL(s,"fileinfo").urlPath:null;if(!d)return null;try{const t=await i(d,{method:"POST",body:JSON.stringify(c),headers:{"Content-Type":"application/json"},signal:o}),e=await t.json();for(const t of e)l.push(t);return l}catch(t){throw W.error(t),new Error("HTTP request failed calling Provider")}}async getFileInfo(t,e,a=!1,n,o){const r=await this.getEndpoints(e),s=await this.getServiceEndpoints(e,r),c=E({},t,{headers:o,checksum:a}),l=[],d=this.getEndpointURL(s,"fileinfo")?this.getEndpointURL(s,"fileinfo").urlPath:null;if(!d)return null;try{const t=await i(d,{method:"POST",body:JSON.stringify(c),headers:{"Content-Type":"application/json"},signal:n}),e=await t.json();for(const t of e)l.push(t);return l}catch(t){throw W.error(t),new Error("HTTP request failed calling Provider")}}async getComputeEnvironments(t,e){var a;const n=await this.getEndpoints(t),o=await this.getServiceEndpoints(t,n),r=null==(a=this.getEndpointURL(o,"computeEnvironments"))?void 0:a.urlPath;if(!r)return null;try{const t=await i(r,{method:"GET",headers:{"Content-Type":"application/json"},signal:e});return await t.json()}catch(t){throw W.error(t),new Error("HTTP request failed calling Provider")}}async initialize(t,e,a,n,o,r,s,c,l){const d=await this.getEndpoints(o),h=await this.getServiceEndpoints(o,d);let u=this.getEndpointURL(h,"initialize")?this.getEndpointURL(h,"initialize").urlPath:null;if(!u)return null;u+=`?documentId=${t}`,u+=`&serviceId=${e}`,u+=`&fileIndex=${a}`,u+=`&consumerAddress=${n}`,s&&(u+="&userdata="+encodeURI(JSON.stringify(s))),c&&(u+="&environment="+encodeURI(c)),l&&(u+="&validUntil="+l);try{const t=await i(u,{method:"GET",headers:{"Content-Type":"application/json"},signal:r});return await t.json()}catch(t){throw W.error(t),new Error("Asset URL not found or not available.")}}async initializeCompute(t,e,a,n,o,r,s){const c=await this.getEndpoints(o),l=await this.getServiceEndpoints(o,c),d={datasets:t,algorithm:e,compute:{env:a,validUntil:n},consumerAddress:r},h=this.getEndpointURL(l,"initializeCompute")?this.getEndpointURL(l,"initializeCompute").urlPath:null;if(!h)return null;try{const t=await i(h,{method:"POST",body:JSON.stringify(d),headers:{"Content-Type":"application/json"},signal:s});return await t.json()}catch(t){throw W.error(t),new Error("ComputeJob cannot be initialized")}}async getDownloadUrl(t,e,a,i,n,o,r,s){const c=await this.getEndpoints(o),l=await this.getServiceEndpoints(o,c),d=this.getEndpointURL(l,"download")?this.getEndpointURL(l,"download").urlPath:null;if(!d)return null;const h=Date.now();let u=d;return u+=`?fileIndex=${i}`,u+=`&documentId=${t}`,u+=`&transferTxId=${n}`,u+=`&serviceId=${a}`,u+=`&consumerAddress=${e}`,u+=`&nonce=${h}`,u+=`&signature=${await this.signProviderRequest(r,e,t+h)}`,s&&(u+="&userdata="+encodeURI(JSON.stringify(s))),u}async computeStart(t,e,a,n,o,r,s,c,l){const d=await this.getEndpoints(t),h=await this.getServiceEndpoints(t,d),u=this.getEndpointURL(h,"computeStart")?this.getEndpointURL(h,"computeStart").urlPath:null,m=Date.now();let w=a;w+=o.documentId,w+=m;const p=await this.signProviderRequest(e,a,w),g=Object();if(g.consumerAddress=a,g.signature=p,g.nonce=m,g.environment=n,g.dataset=o,g.algorithm=r,g.additionalDatasets&&(g.additionalDatasets=c),l&&(g.output=l),!u)return null;try{const t=await i(u,{method:"POST",body:JSON.stringify(g),headers:{"Content-Type":"application/json"},signal:s});return null!=t&&t.ok?await t.json():(W.error("Compute start failed: ",t.status,t.statusText,await t.json()),W.error("Payload was:",g),null)}catch(t){throw W.error("Compute start failed:"),W.error(t),W.error("Payload was:",g),new Error("HTTP request failed calling Provider")}}async computeStop(t,e,a,n,o,r){const s=await this.getEndpoints(n),c=await this.getServiceEndpoints(n,s),l=this.getEndpointURL(c,"computeStop")?this.getEndpointURL(c,"computeStop").urlPath:null,d=await this.getNonce(n,e,r,s,c);let h=e;h+=a||"",h+=t&&`${this.noZeroX(t)}`||"",h+=d;const u=await this.signProviderRequest(o,e,h),m=Object();if(m.signature=u,m.documentId=this.noZeroX(t),m.consumerAddress=e,a&&(m.jobId=a),!l)return null;try{const t=await i(l,{method:"PUT",body:JSON.stringify(m),headers:{"Content-Type":"application/json"},signal:r});return null!=t&&t.ok?await t.json():(W.error("Compute stop failed:",t.status,t.statusText),W.error("Payload was:",m),null)}catch(t){throw W.error("Compute stop failed:"),W.error(t),W.error("Payload was:",m),new Error("HTTP request failed calling Provider")}}async computeStatus(t,e,a,n,o){const r=await this.getEndpoints(t),s=await this.getServiceEndpoints(t,r),c=this.getEndpointURL(s,"computeStatus")?this.getEndpointURL(s,"computeStatus").urlPath:null;let l=`?consumerAddress=${e}`;if(l+=n&&`&documentId=${this.noZeroX(n)}`||"",l+=a&&`&jobId=${a}`||"",!c)return null;try{const t=await i(c+l,{method:"GET",headers:{"Content-Type":"application/json"},signal:o});return null!=t&&t.ok?await t.json():(W.error("Get compute status failed:",t.status,t.statusText),null)}catch(t){throw W.error("Get compute status failed"),W.error(t),new Error("HTTP request failed calling Provider")}}async getComputeResultUrl(t,e,a,i,n){const o=await this.getEndpoints(t),r=await this.getServiceEndpoints(t,o),s=this.getEndpointURL(r,"computeResult")?this.getEndpointURL(r,"computeResult").urlPath:null,c=Date.now();let l=a;l+=i,l+=n.toString(),l+=c;const d=await this.signProviderRequest(e,a,l);if(!s)return null;let h=s;return h+=`?consumerAddress=${a}`,h+=`&jobId=${i}`,h+=`&index=${n.toString()}`,h+=`&nonce=${c}`,h+=d&&`&signature=${d}`||"",h}async computeDelete(t,e,a,n,o,r){const s=await this.getEndpoints(n),c=await this.getServiceEndpoints(n,s),l=this.getEndpointURL(c,"computeDelete")?this.getEndpointURL(c,"computeDelete").urlPath:null,d=await this.getNonce(n,e,r,s,c);let h=e;h+=a||"",h+=t&&`${this.noZeroX(t)}`||"",h+=d;const u=await this.signProviderRequest(o,e,h),m=Object();if(m.documentId=this.noZeroX(t),m.consumerAddress=e,m.jobId=a,u&&(m.signature=u),!l)return null;try{const t=await i(l,{method:"DELETE",body:JSON.stringify(m),headers:{"Content-Type":"application/json"},signal:r});return null!=t&&t.ok?await t.json():(W.error("Delete compute job failed:",t.status,t.statusText),W.error("Payload was:",m),null)}catch(t){throw W.error("Delete compute job failed:"),W.error(t),W.error("Payload was:",m),new Error("HTTP request failed calling Provider")}}async isValidProvider(t,e){try{const a=await i(t,{method:"GET",headers:{"Content-Type":"application/json"},signal:e});if(null!=a&&a.ok){const t=await a.json();if(t&&(t.providerAddress||t.providerAddresses))return!0}return!1}catch(t){return W.error(`Error validating provider: ${t.message}`),!1}}noZeroX(t){return this.zeroXTransformer(t,!1)}zeroXTransformer(t="",e){const{valid:a,output:i}=this.inputMatch(t,/^(?:0x)*([a-f0-9]+)$/i,"zeroXTransformer");return(e&&a?"0x":"")+i}inputMatch(t,e,a){if("string"!=typeof t)throw W.debug("Not input string:"),W.debug(t),new Error(`[${a}] Expected string, input type: ${typeof t}`);const i=t.match(e);return i?{valid:!0,output:i[1]}:(W.warn(`[${a}] Input transformation failed.`),{valid:!1,output:t})}async getData(t){return i(t,{method:"GET",headers:{"Content-type":"application/json"}})}}const pt=new wt;export{mt as Aquarius,b as Config,K as ConfigHelper,ot as Datatoken,ht as DfRewards,ut as DfStrategyV1,et as Dispenser,v as FEE_HISTORY_NOT_SUPPORTED,at as FixedRateExchange,F as GASLIMIT_DEFAULT,R as LogLevel,j as Logger,W as LoggerInstance,y as MAX_UINT_256,nt as Nft,rt as NftFactory,wt as Provider,pt as ProviderInstance,it as Router,Y as SmartContract,tt as SmartContractWithAddress,dt as VeAllocate,ct as VeFeeDistributor,lt as VeFeeEstimate,st as VeOcean,C as ZERO_ADDRESS,V as allowance,Z as allowanceWei,T as amountToUnits,$ as approve,_ as approveWei,H as balance,B as calculateEstimatedGas,Q as configHelperNetworks,z as decimals,N as downloadFile,S as downloadFileBrowser,O as generateDid,P as generateDtName,A as getFairGasPrice,U as getHash,L as minAbi,k as sendTx,D as setContractDefaults,q as signHash,I as sleep,G as transfer,x as unitsToAmount};
//# sourceMappingURL=lib.modern.js.map
